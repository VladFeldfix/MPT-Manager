{
	name = [[
		TEST1
	]],

	mapping_table = [[
		P1 = {braid1, 1, braid1_1}
		P2 = {braid2, 1, braid2_2}
		P3 = {braid1, 1, braid1_3}
	]],

	net_list = [[
		NET1 = {P1.1, P2.A, P3.k1}
		NET2 = {P1.2, P2.B, P3.k2}
		NET3_EMPTY_NET = {P3.1}
	]],

	scripts = {
		test_program = [[

-- TEST
-- Description
-- Drawing
-- Drawing_Rev

if GetPersist('OperatorName') then OperatorName = GetPersist('OperatorName') else OperatorName = 'OperatorName' end 
if GetPersist('SerialNumber') then SerialNumber = GetPersist('SerialNumber') else SerialNumber = 'SerialNumber' end
OperatorName = InputText('Enter Operator Name',OperatorName, 'Operator Name', '')
SetPersist('OperatorName',OperatorName)
SerialNumber = InputText('Enter Serial Number',SerialNumber, 'Serial Number', '')
SetPersist('SerialNumber',SerialNumber)
Report.Header('Machine Name',"MPT-5000")
Report.Header('Test TRD',"PS-39-756948 Rev.: L")
Report.Header('Product Part Number',tostring(TEST))
Report.Header('Product Description',tostring(Description))
Report.Header('Wiring Diagram',tostring(Drawing)..'Rev.: '..tostring(Drawing_Rev))
Report.Header('Written by',"Vlad Feldfix, Vladimir Shishkovsky")
Report.Header('Operator Name',tostring(OperatorName))
Report.Header('Serial Number',tostring(SerialNumber))

ContinuityParameters = {
  Label = 'Test Continuity',
  Device = 'msr',
  Current = 0.1,
  Volts = 5,
  MaxResistance = 1,
  Kelvin = 0,
  Tare = 2.5,
}

ContinuitySetup = {
  setup = {i = ContinuityParameters.Current, v = ContinuityParameters.Volts, Kelvin = ContinuityParameters.Kelvin, tare = {mode = 'fixed', data = {res = ContinuityParameters.Tare}}},
  criteria = {r_max = ContinuityParameters.MaxResistance},
  diagnose = {},
}

Continuity(ContinuityParameters.Label, ContinuityParameters.Device, ContinuitySetup)

IsolationParameters = {
  Label = 'Test Isolation',
  Device = 'msr',
  Current = 0.1,
  Volts = 5,
  MinResistance = 100,
  Kelvin = 0,
  Tare = 2.5,
  Points = 'all'
}

IsolationSetup = {
  setup = {i = IsolationParameters.Current, v = IsolationParameters.Volts, kelvin = IsolationParameters.Kelvin, tare = {mode = 'fixed', data = {res = IsolationParameters.Tare}}},
  criteria = {r_min = IsolationParameters.MinResistance},
  diagnose = {scan = 'binary'},
}

Isolation(IsolationParameters.Label, IsolationParameters.Device, IsolationSetup, IsolationParameters.Points)

//TEST HiPot DC
If(PASSED){
    Prompt("WARNING! Hi voltage test is about to start. Close the glass dome before continuation");
    PrintLn(CON+DSK,"TEST HiPot DC");
    SetHiPot(DC, V = 500 Volts, R >100 MOhm,Dwell = 1S, RampUpRate=1000);
    HiPotDC(ALL);
}

-- TEST RESULT
Report.Info("TEST RESULT:")

-- Created with MPT-Manager 2.0 on 2024-02-21

		]]
	}
}
